[["veebirakendused2.html", "Praktikum 19 Veebirakendused, veebimajutus 2 19.1 Mapbox GL JS 19.2 HTML 19.3 CSS 19.4 Lisa 19.5 Järgmisel korral", " Praktikum 19 Veebirakendused, veebimajutus 2 Animatsioon Esmalt vaja date-tüüpi tunnust to_date(concat(year, -01-01)) View -&gt; Decorations -&gt; Title Label Animatsioonina, gifina Slideriga 19.1 Mapbox GL JS Minimaalne JavaScripti kood, mida veebikaardi näitamiseks vaja läheb, on mapboxgl.accessToken = ; // juurdepääsuluba const map = new mapboxgl.Map({ // tee uus kaardiobjekt container: map, // kaardi ID style: mapbox://styles/mapbox/streets-v11, // stiili veebiaadress center: [-74.5, 40], // kaardi lähtekoordinaadid [lng, lat] zoom: 9 // kaardi sissesuumimise lähtepositsioon }); Juurdepääsuluba on vaja kõikide Mapboxi APIde kasutamiseks. Enda juurdepääsuload leiad siit. Mapboxi juurdepääsuluba võib välja näha näiteks umbes selline: Stiili võid teha Mapbox Studios ise (nagu tegime nt Storymaps praktikumis) või laadida olemasolevate stiilide seast. Kasutame Mapboxi aluskaart ja paneme sinna asustusüksuste andmed https://studio.mapbox.com/ Datasets -&gt; New Dataset geojson EPSG 4326 delete crs in geojson file Teeme lihtsa rakenduse, kus kasutaja saab liuguri abil vaadata eri perioodide andmeid ning punktidel klikkides näha atribuuttabeli infot. Kasutame sedapuhku Mapbox GL JS teeki. Nagu eelmisel korral räägitud, kasutavad veebirakendused vähemalt kolme elementi: HTMLi, mis annab leheküljele struktuuri, CSSi, mis annab leheküljele kujunduse, ja JavaScripti, mis annab lehele interaktiivsuse. 19.2 HTML Kõigepealt teeme valmis lihtsa HTML-i struktuuri, kus oleks päis ja keha ning kus kehas oleksid olemas meie lehekülje struktuurielemendid: kaart, kirjeldustekst, liugur. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;div id = &quot;kaart&quot;&gt;&lt;/div&gt; &lt;div id = &quot;kirjeldus&quot;&gt; &lt;div id = &quot;liugur&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; Päisesse peab Mapboxi APIt kasutades minema üsna kindel info. Seega kopeerime &lt;head&gt;&lt;/head&gt; märgendite vahele alloleva koodi: &lt;meta charset = &quot;utf-8&quot;/&gt; &lt;meta name=&#39;viewport&#39; content=&#39;width=device-width, initial-scale=1&#39; /&gt; &lt;title&gt;Tartumaa asustusüksuste mainimine&lt;/title&gt; &lt;script src=&#39;https://api.tiles.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.js&#39;&gt;&lt;/script&gt; &lt;link href=&#39;https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css&#39; rel=&#39;stylesheet&#39;/&gt; Samuti saame kohe ära määrata, mida tahame näidata kirjeldava tekstina. Lisame kirjelduse &lt;div&gt;-märgendite vahele, enne liuguri jaotist kirjelduse pealkirja ja info andmete päritolu kohta: &lt;h1&gt;Tartumaa asustusüksuste esmamainimine&lt;/h1&gt; &lt;p&gt;Andmed: Andrese käest&lt;/p&gt; 19.3 CSS Järgmiseks võiksime panna paika CSSi. 19.4 Lisa Kui tahad veebikaartide tegemise kohta rohkem õppida, siis väga hea ja põhjaliku kursuse veebikaartide kohta leiad näiteks siit. 19.5 Järgmisel korral Ruumiandmete analüüs R-is. Selleks palun installi endale R ja RStudio uusimad versioonid. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
