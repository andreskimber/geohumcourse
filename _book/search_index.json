[
["tekstianalyys2.html", "Praktikum 16 Geograafiline tekstianalüüs 2 16.1 Ülesanne 1: lihtne teksti meelsuse analüüs 16.2 Ülesanne 2: lihtne kollokatsioonide analüüs", " Praktikum 16 Geograafiline tekstianalüüs 2 Tänases praktikumis tegeleme geograafilise tekstianalüüsiga, kasutades eesti keele automaattöötluseks loodud vahendeid. Nagu eelmises praktikumis mainitud, sisaldub selleks kõige põhjalikum tööriistade komplekt Pythoni EstNLTK teekides. Materjali ja aja kokkuhoiu huvides oleme juba eraldanud tekstidest kohanimeüksused. Koodid ja juhendid leiad siit. Kasutame geograafilise tekstianalüüsi näitlikustamiseks siin Tartu Linnaraamatukogu e-raamatute eeltöödeldud faile (lehel kasutas soned.zip). Tegeleme selles praktikumis Eduard Bornhöhe teosega “Vürst Gabriel ehk Pirita kloostri viimsed päevad”. 16.1 Ülesanne 1: lihtne teksti meelsuse analüüs Esimeses ülesandes vaatleme, milliseid kohanimeüksusi on teoses mainitud; loeme kokku, kui palju mingit kohta on mainitud; analüüsime, milline on kohanimeüksust sisaldava tekstikatkendi meelsus: kas tekst on pigem positiivne, negatiivne, vastuoluline või neutraalne; geokodeerime kohanimeüksused; visualiseerime andmeid. Figure 16.1: “Vürst Gabriel ehk Pirita kloostri viimsed päevad” lähtetekst Kõigepealt vaatame faili kontekstitabel_bornhohe_incorr.csv, kus on tabelkujul kohanimeüksus sellisel kujul, nagu see tekstis esineb (tulp kohad). Mitmest sõnast koosneva kohanimeüksuse puhul (nt Tallinna linnast) ainult kõige esimene komponent (nt Tallinna); katkend/kontekst ehk 20 sõna kohanimest vasakule ja paremale (tulp kontekstid); kohanimeüksuse kõige esimese komponendi lemma (tulp lemmad1) ehk sõnaraamatukuju (nt Tallinn); terve kohanimeüksus (tulp lemmad2), milles lemmatiseeritud ehk sõnaraamatukujule viidud ainult kõige viimane element (nt Tallinna linn). Tabelis on nimetuvastaja automaatne väljund, kus mingeid parandusi ei ole tehtud. ## kohad ## 1 Tallinnas ## 2 Harju ## 3 Harju ## 4 Tallinnast ## 5 Paidesse ## 6 Liivi ## kontekstid ## 1 kloostri viimsed päevad . E. Bornhöhe ( Eduard Brunberg&#39;i ) ajaloolik jutustus suurest Liivi sõjast ( 1558 - 1583 ) . Tallinnas . Trükitud G. Pihlaka kuluga . 1. Junker Hansu äpardus . See oli kena , soe suvine päev Lõikuse kuu ## 2 Junker Hansu äpardus . See oli kena , soe suvine päev Lõikuse kuu hakatusel 1576. Armsalt ja rahuliselt säras päike Harju maa üle , aga maakoha pilt , mida päikese ja soojuse kiired läbipaistva kuldse uduga katsivad , ei olnud ## 3 ohakatega kaetud põllud , ära põletatud mõisade ja külade ahervarred - need olivad maakoha tähtsamad tundemärgid . Rikas ja rõõmus Harju maa oli 18 aastase sõja läbi suuremalt jaolt vaikseks kõrbeks muudetud , kus Sakslased ja Poolakad , Venelased ja ## 4 kus Sakslased ja Poolakad , Venelased ja Rootslased aeg ajalt endise rikkuse riismeid taastamas käisivad . Maantee pääl , mis Tallinnast Paidesse viib ja sel ajal kõige viletsamas korras oli , sõitsivad neli ratsanikku , kõik noored mehed Saksa moodi ## 5 Sakslased ja Poolakad , Venelased ja Rootslased aeg ajalt endise rikkuse riismeid taastamas käisivad . Maantee pääl , mis Tallinnast Paidesse viib ja sel ajal kõige viletsamas korras oli , sõitsivad neli ratsanikku , kõik noored mehed Saksa moodi riides ## 6 rohkeste nalja ja naeris ise kõige valjemine oma nalja üle . Tema nägu oli selle parandamata kergemeele peegel , mis Liivi orduriigi mõisnikkusi ja kodanikkusi hirmsa sõja hädasid unustama ja Venelasi sagedaste imestama pani . Vana orduriik oli Vene löökide ## lemmad1 lemmad2 ## 1 Tallinn Tallinn ## 2 Harju Harju ## 3 Harju Harju ## 4 Tallinn Tallinn ## 5 pai pai ## 6 Liivi Liivi orduriik 16.1.1 Tekstikatkendite meelsuse tuvastamine Järgmiseks määrame tekstikatkendite meelsuse. Selleks saame kasutada näiteks Eesti Keele Instituudi emotsioonidetektorit, mida saab kasutada ka Microsoft Excelis. Selleks installime kõigepealt vastava pistikprogrammi (plugin): laadime alla faili valence.xlam; avame Exceli ja valime File -&gt; Options -&gt; Add-Ins; kõige all valime Manage -&gt; Excel Add-ins -&gt; Go -&gt; Browse -&gt; valime faili valence.xlam -&gt; OK; paneme Exceli kinni ning teeme uuesti lahti. Järgmiseks avame Excelis faili kontekstitabel_bornhohe_incorr.csv: Data -&gt; From Text -&gt; Delimited, File origin: Unicode (UTF-8) ja My data has headers -&gt; Next -&gt; Delimiters (ainult Semicolon) -&gt; Next -&gt; Finish. (Uuemate Exceli versioonide puhul vaata juhendit siit). Tekitame uue tulba, nt nimega “Ajutine”. Kirjutame uue tulba esimesse lahtrisse funktsiooni =Valence.Test() ning funktsiooni sulgude sisse vastaval real asuva lahtri viite, kus on tekstikatkend, nt =Valence.Test(B2). Kopeerime valemi kõikidesse ajutise tulba lahtritesse nii, et igal real oleks funktsiooni sulgude sees vastava rea number (B2, B3, B4, B5 jne) ning funktsiooni vasteks õige tekstikatkendi hinnang. Teeme tulba kõrvale uue tulba nimega “Emotsioonid” ning kopeerime kõik ajutise tulba väärtused sellesse tulpa, kasutades väärtustena kleepimist (Paste as Values). Kustutame tulba “Ajutine” ning salvestame faili csv- või xlsx-failina. NB! Windowsis muutub csv-na salvestamisel faili kodeering UTF-8st WIndowsis endas kasutatavaks, keelespetsiifiliseks kodeeringuks. Kui tahad kodeeringut tagasi UTF-8ks muuta, siis installi näiteks Notepad++, ava csv-fail seal ning vali Encoding -&gt; Convert to UTF-8 -&gt; Save. Figure 16.2: Teksti meelsuse tuvastamine 16.1.2 Geosildistamine Nüüd peame saama oma tabelile koordinaadid. Selleks kasutame Maa-ameti massgeokodeerimise teenust. Figure 16.3: Geokodeerimise sätted Laadime üles csv- või xlsx-faili, kasutame sisendaadressiks/lähteaadressiks pikka kohanimeüksust ehk tulpa lemmad2 ning kui töö on valmis, siis saadud tabeli SHP-failina alla (eeldame, et me ei hakka käsitsi faili koordinaate muutma). 16.1.3 Visualiseerimine Avame QGISi ning laadime sinna geokodeeritud faili. Valime sobiva aluskaardi, näiteks eelmisel korral kasutatud Natural Earth Data vektorandmed (admin0 Countries). Figure 16.4: Andmekihid QGISis Visualiseerimiseks on meil vaja teada, kui mitu korda igat kohta mainiti, kui mitu igast mainimisest olid negatiivses, positiivses, neutraalses või vastuolulises kontekstis. Võime vastavad andmed tuletada mitut moodi. Siin teeme esmalt geokodeeritud kihist DB Manageris uue kihi, kus iga kohanimeüksuse esinemisjuhud on kokku loetud (count). SELECT lemmad__1, count(*) as arv, geometry FROM geocoded GROUP BY lemmad__1; Tee ka linnuke Load as new layer ette ning laadi tulemus uue kihina nimega koguarv. Figure 16.5: Andmekihid QGISis Visualiseerime kohanimeüksuste esinemissagedusi punktidena nii, et ringide suurus näitaks mainimiste arvu, siltide teksti suurus näitaks mainimiste arvu (näita kõiki silte). Figure 16.6: Andmekihid QGISis Näeme, et automaatne nimetuvastus ja automaatne geokodeerimine ilma mingi vahekontrolli, täpsustuste ja parandusteta ei tööta Bornhöhe tekstil hästi ning tegelikult peaksime adekvaatsete tulemuste saamiseks siiski ka pisut käsitööd tegema. Praegu aga ignoreerime ebatäpseid tulemusi ja teeme enam-vähem samal moel kihi, kus on eraldi kokku loetud positiivsete, negatiivsete jne katkendite hulk iga kohanime puhul. SELECT lemmad__1, count(*) as arv, geometry, Emotsiooni FROM geocoded GROUP BY lemmad__1, Emotsiooni; (Pane tähele, et kui emotsioone sisaldav tulbanimi oli enne Emotsioonid, siis QGIS võib tulbanime pisut lühendada.) Figure 16.7: Andmekihid QGISis Nüüd saame visualiseerida lihtsalt teatud emotsioonidega seotud kohti, ent võime ka kaks kihti ühendada ning arvutada iga emotsiooni osakaalu vastava koha katkendite hulgas. Ühendamiseks võime liita emotsioonidega kihile esimese, koondsagedustega kihi. Ühendatud kihil loome uue atribuudi osakaal (tulp arv jagatud tulbaga koguarv_arv ja korrutatud 100-ga). Figure 16.8: Andmekihid QGISis Nüüd visualiseerime piirkondi nii, et punkti värv väljendab vastava kohaga seotud emotsiooni, punkti suurus vastava emotsiooni osakaalu. Teeme punktid pisut läbipaistvamaks. Figure 16.9: Andmekihid QGISis Lõpuks võiksime veel teha heatmapi, nagu eelmisel korral, kus kuvame algse punktikihi põhjal punktide jaotumist rastrina ning kuvame selle peal loodud vektorkihti. Figure 16.10: Andmekihid QGISis 16.2 Ülesanne 2: lihtne kollokatsioonide analüüs Teises ülesandes püüame leida kohanimede kontekstist kollokatsioone ehk sõnu, mis esinevad konkreetsete kohanimedega sagedamini koos, kui võiks arvata nende üldisest esinemissagedusest tekstis. Oleme otsinud kohanimedega koos esinevaid omadussõnu, mis EstNLTK morfoloogilises analüsaatoris on eristatud märgendiga ‘A’. Tuvastatud kohanimedega tabel asub failis sonapaarid_bornhohe_freqs_corr.csv. ## PAARID KOHAD POS_KOHAD KOLLOKAADID POS_KOLLOKAADID ## 1 Saksa-Rootsi esialgne Saksa-Rootsi H esialgne A ## 2 Lääne-Euroopa äärne Lääne-Euroopa H äärne A ## 3 Rootsimaa tõenäitlik Rootsimaa H tõenäitlik A ## 4 Järva omavääriline Järva H omavääriline A ## 5 Järva säälne Järva H säälne A ## 6 Lääs äärne Lääs H äärne A ## NER_KOLLOKAADID KOKKU KOHT_KOKKU KOLL_KOKKU N E ## 1 O 1 1 1 45442 2.200607367633467e-05 ## 2 O 1 1 1 45442 2.200607367633467e-05 ## 3 O 1 2 1 45442 4.401214735266934e-05 ## 4 O 1 3 1 45442 6.601822102900401e-05 ## 5 O 1 3 1 45442 6.601822102900401e-05 ## 6 O 1 3 1 45442 6.601822102900401e-05 ## Z.skoor ## 1 213.16660156320475 ## 2 213.16660156320475 ## 3 150.7282324052536 ## 4 123.06637802158457 ## 5 123.06637802158457 ## 6 123.06637802158457 Automaatse nimetuvastuse tulemusi on siin käsitsi veidi kohendatud ja parandatud. Näiteks on kohanimeks märgitud Pirita ja Liivi, mittekohanimedeks jällegi suurtähelised sõnad nagu Haleda ja Viimse. Laadime tabeli Maa-ameti geokodeerijasse. Seekord kasutame koordinaatide saamiseks ainult kohanimeüksuse esimest komponenti (tulbas KOHAD). Kuna on tõenäoline, et tahame koordinaate veel käsitsi muuta (nt välisriikide kohanimesid), siis laadime geokodeeritud tabeli alla csv- või xlsx-failina. Kasutame nüüd näiteks Google Mapsi, et leida üldised koordinaadid kohanimedele nagu Rootsi, Rootsimaa, Liivimaa, Lääne-Euroopa jms. Pane tähele, et Google Mapsist saame WGS84(EPSG:4326) süsteemis koordinaadid ehk geograafilised, mitte projitseeritud koordinaadid. Seega peaksime muutma koordinaate tulpades N ja E (mitte eesti süsteemis koordinaatide tulbas). Võime seda teha Excelis. Muudame ära näiteks koordinaadid kohtadel Eesti, Kura (Kuramaa), Liivi (määrame nt Riia linna), Läti, Lääs (tekstis Lääne maa), Maarja ja Marienthal (viidatakse Püha Brigitta kloostri varemetele), Moskva, Pihkva, Poola, Rooma, Rootsi, Rootsimaa, Rootsi-Saksa, Saksa, Saksamaa, Vene, Viru, Virumaa ja Võnnu (Cesis). Lisame koordinaadid Lõuna-Liivile ja Lääne-Euroopale. Salvesta parandatud fail csv-formaadis ja laadi see QGISi. NB! Kasutades EPSG4326 koordinaate tahab QGIS, et csv-failis oleksid pikkus- ja laiuskraadide komakohad eraldatud punktiga. Maa-ameti kodeerija aga eraldab need komaga. Seega peaksime (nt Excelis) enne ka komad punktidega asendama ning salvestama koordinaatide tulbad arvuliste tüüpidena. Figure 16.11: Parandatud koordinaatidega faili importimine Kuna nüüd on meil ka Euroopa teiste kohtade koordinaatidega punktid, muuda projekti aknas all paremas nurgas projekti koordinaatsüsteemiks Euroopa koordinaatsüsteem EPSG:3857. Figure 16.12: Kaart uues koordinaatide referentssüsteemis Visualiseerime jälle kõigepealt üldist punktide jaotumist (nt punktide suuruse abil või kontsentriliste ringidena: Symbology -&gt; Point Displacement). Renderer Settings alt saame määrata punktide värvi ja suuruse ning välise ringi ära kaotada. Figure 16.13: Punktid kontsentriliste ringidena Lisame sõnapaaride sildid ainult nendele sõnapaaridele, kus sõnadevahelise seose tugevuse statistik z-skoor on üle 70 (Rule-based labeling). NB! Jälgi, mis tüüpi on Z-skoori tunnus. Siltide nihutamiseks võib kasutada näiteks callout’e. Figure 16.14: Siltide lisamine Proovi nüüd kaarti paremini stiliseerida. "]
]
